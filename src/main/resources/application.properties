inputKafkaTopic=${INPUT_KAFKA_TOPIC:incoming.op.msgs}
outputKafkaTopic=${OUTPUT_KAFKA_TOPIC:modify.op.msgs}
xsltKafkaTopic=${XSLT_KAFKA_TOPIC:XSLT}
xsltName=${XSLT_NAME:template.xslt}
appName=${APP_NAME:xsltKafkaStreams}

kafkaBrokerServer=${KAFKA_BROKER_SERVER:localhost}
kafkaBrokerPort=${KAFKA_BROKER_PORT:9092}

quarkus.kafka-streams.bootstrap-servers=${KAFKA_BROKERS}
quarkus.kafka-streams.application-id=${APP_NAME:xsltKafkaStreams}
quarkus.kafka-streams.topics=${INPUT_KAFKA_TOPIC},${OUTPUT_KAFKA_TOPIC}

quarkus.jaeger.service-name=${APP_NAME:quarkusXmlJsonConverter}
quarkus.jaeger.local.service-name=${APP_NAME:quarkusXmlJsonConverter}
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.propagation=jaeger,b3
zipkin.endpoint=${ZIPKIN_ENDPOINT: }

quarkus.log.syslog.enable

kafka-streams.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
kafka-streams.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
kafka-streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler

quarkus.native.additional-build-args =-H:ReflectionConfigurationFiles=reflection-config.json